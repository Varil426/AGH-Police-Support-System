version: "3.8"
services:
  # Common
  rabbitmq:
    extends:
      file: docker-compose.yaml
      service: rabbitmq
  simulationdb:
    extends:
      file: docker-compose.yaml
      service: simulationdb
  loki:
    extends:
      file: docker-compose.yaml
      service: loki
  grafana:
    extends:
      file: docker-compose.yaml
      service: grafana
  # Simulation
  simulation:
    depends_on:
      rabbitmq:
        condition: service_healthy
      simulationdb:
        condition: service_healthy
      loki:
        condition: service_healthy
    build:
      context: ./PoliceSupportSystem
      dockerfile: simulation-dockerfile
    networks:
      - rabbitmq_net
      - loki_net
      - simulation_net
  # HQ Service
  hqservice:
    depends_on:
      rabbitmq:
        condition: service_healthy
      loki:
        condition: service_healthy
      simulation:
        condition: service_started
      webapp:
        condition: service_healthy
    build:
      context: ./PoliceSupportSystem
      dockerfile: hq-service-dockerfile
    networks:
      - rabbitmq_net
      - loki_net
  # WebApp
  webapp:
    depends_on:
      rabbitmq:
        condition: service_healthy
      loki:
        condition: service_healthy
    build:
      context: ./PoliceSupportSystem
      dockerfile: web-app-dockerfile
    ports:
      - "5299:8080"
    networks:
      - rabbitmq_net
      - loki_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/api/health-check"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
networks:
  rabbitmq_net:
    driver: bridge
  loki_net:
    driver: bridge
  simulation_net:
    driver: bridge
