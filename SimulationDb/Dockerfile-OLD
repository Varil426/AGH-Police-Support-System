# FROM debian
# FROM postgres:13
# FROM pgrouting/pgrouting

FROM pamtrak06/postgis-pgrouting-osm

# Variables
ENV PG_MAJOR 13
ENV POSTGIS_MAJOR 3
ENV POSTGIS_USER postgis_admin
# TODO Password - Move outside of this file
ENV POSTGIS_PASSWORD postgis_admin
ENV POSTGIS_DB postgisdb
ENV POSTGIS_SCHEMA maps
ENV MAP_FILENAME krakow.osm

# RUN apt-get upgrade \ 
#     && apt-get update

# RUN apt-get -y install sudo

# RUN service postgresql start \
#     && sudo -u postgres psql -c "CREATE USER ${POSTGIS_USER} WITH SUPERUSER PASSWORD '${POSTGIS_PASSWORD}';" \
#     && sudo -u postgres psql -c "CREATE DATABASE ${POSTGIS_DB} OWNER ${POSTGIS_USER};" \
#     && sudo -u postgres psql "postgresql://${POSTGIS_USER}:${POSTGIS_PASSWORD}@localhost:5432/${POSTGIS_DB}" -c "CREATE SCHEMA ${POSTGIS_SCHEMA};" \
#     && sudo -u postgres psql "postgresql://${POSTGIS_USER}:${POSTGIS_PASSWORD}@localhost:5432/${POSTGIS_DB}" -c "CREATE EXTENSION postgis SCHEMA ${POSTGIS_SCHEMA};" \
#     && sudo -u postgres psql "postgresql://${POSTGIS_USER}:${POSTGIS_PASSWORD}@localhost:5432/${POSTGIS_DB}" -c "CREATE EXTENSION pgrouting SCHEMA ${POSTGIS_SCHEMA};"

# Map Import
# COPY maps/${MAP_FILENAME} /maps
# RUN service postgresql start \
#     && osm2pgrouting --f /maps/${MAP_FILENAME} --dbname ${POSTGIS_DB} --schema ${POSTGIS_SCHEMA} --username ${POSTGIS_USER} -W ${POSTGIS_PASSWORD} --clean
COPY ./*.osm /data

# RUN psql -d ${POSTGIS_DB}

# RUN CREATE EXTENSION postgis;

# TODO Remove
ENV POSTGRES_HOST_AUTH_METHOD trust

# TODO Improve https://stackoverflow.com/questions/40454470/how-can-i-use-a-variable-inside-a-dockerfile-cmd
# COPY start.sh /

# COPY *.sql /docker-entrypoint-initdb.d/

# CMD [ postgres ]
# EXPOSE 5432
# CMD ["service", "postgresql", "start"]
# CMD "/usr/lib/postgresql/${PG_MAJOR}/bin/postgres"
# CMD ["sudo", "-u", "postgres", "/usr/lib/postgresql/13/bin/postgres", "-D"]
# CMD service postgresql start && tail -F /var/log/mysql/error.log
# CMD sudo -u postgres /start.sh
# CMD psql 
# CMD ["sleep","3600"]